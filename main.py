#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ Network Scanner
–ê–≤—Ç–æ—Ä: [BotPany]
–í–µ—Ä—Å–∏—è: 1.0.0
"""

import tkinter as tk
import argparse
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ PYTHONPATH
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from gui import NetworkScannerGUI
from scanner import NetworkScanner
from visualizer import NetworkVisualizer

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    parser = argparse.ArgumentParser(description='Network Scanner - –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä WiFi —Å–µ—Ç–µ–π')
    parser.add_argument('--gui', action='store_true', help='–ó–∞–ø—É—Å–∫ —Å GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º')
    parser.add_argument('--scan', type=str, help='–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–∫–∞–∑–∞–Ω–Ω—É—é —Å–µ—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 192.168.1.0/24)')
    parser.add_argument('--export', type=str, help='–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª')
    
    args = parser.parse_args()
    
    if args.gui or not any(vars(args).values()):
        # –ó–∞–ø—É—Å–∫ GUI –≤–µ—Ä—Å–∏–∏
        root = tk.Tk()
        app = NetworkScannerGUI(root)
        root.mainloop()
    elif args.scan:
        # –ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
        scanner = NetworkScanner()
        print(f"üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏: {args.scan}")
        devices = scanner.scan_network(args.scan)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {len(devices)}")
        for device in devices:
            print(f"\nüì± {device['hostname']} ({device['ip']})")
            print(f"   MAC: {device['mac']}")
            print(f"   –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å: {device['vendor']}")
            print(f"   –û–°: {device['os']}")
            
        if args.export:
            scanner.export_results(devices, args.export)
            print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤: {args.export}")

if __name__ == "__main__":
    main()
